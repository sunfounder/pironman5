.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi, Arduino & ESP32 Enthusiasts sur Facebook ! Plongez au c≈ìur de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts**: R√©solvez les probl√®mes apr√®s-vente et relevez les d√©fis techniques gr√¢ce √† l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager**: √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Avant-premi√®res exclusives**: B√©n√©ficiez d'un acc√®s anticip√© aux annonces de nouveaux produits et √† des aper√ßus exclusifs.
    - **R√©ductions sp√©ciales**: Profitez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions festives et tirages au sort**: Participez √† des concours et √† des promotions pendant les f√™tes.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !


RTL-SDR Blog V4  
==============================================

.. note::

    Les produits de la s√©rie Pironman 5 n‚Äôincluent pas le module suivant.  
    Vous devez en pr√©parer un vous-m√™me ou l‚Äôacheter sur notre site officiel :

    * `RTL-SDR Blog V4 <https://www.sunfounder.com/products/rtl-sdr-blog-v4>`_

Ce guide couvre une proc√©dure d‚Äôinstallation fiable pour le RTL-SDR Blog V4, un r√©cepteur radio d√©fini par logiciel (SDR) USB populaire et abordable.  
La version V4 int√®gre un tuner R828D am√©lior√©, un mode d‚Äô√©chantillonnage direct, une meilleure sensibilit√©, et un bias-tee int√©gr√© pour alimenter les antennes actives.  
Il fonctionne tr√®s bien pour recevoir la FM diffus√©e, les bandes a√©ronautiques, la radio amateur, l‚ÄôADS-B et de nombreux autres signaux sous Linux et Raspberry Pi.

Pour la documentation du fabricant d‚Äôorigine, voir le guide officiel RTL-SDR Blog V4 : https://www.rtl-sdr.com/V4/

----

Installer le pilote pour RTL-SDR Blog V4  
------------------------------------------------

**0. Pr√©paration**

.. code-block:: shell

   sudo apt update
   sudo apt install -y git cmake build-essential pkg-config libusb-1.0-0-dev sox

Note :  
    ``sox`` (qui fournit la commande ``play``) est inclus pour les tests audio directs.

**1. Nettoyage complet des anciennes biblioth√®ques et binaires (critique)**

.. code-block:: shell

   sudo apt purge -y 'librtlsdr*'
   sudo rm -rf /usr/lib/librtlsdr* /usr/include/rtl-sdr* \
               /usr/local/lib/librtlsdr* /usr/local/include/rtl-sdr* \
               /usr/local/include/rtl_* /usr/local/bin/rtl_*
   sudo ldconfig

V√©rification A :

.. code-block:: shell

   ldconfig -p | grep rtlsdr || echo "OK: No librtlsdr found in system cache."

**2. Compiler et installer le pilote RTL-SDR Blog V4**

.. code-block:: shell

   cd ~
   git clone https://github.com/rtlsdrblog/rtl-sdr-blog.git
   cd rtl-sdr-blog
   mkdir build && cd build
   cmake .. -DINSTALL_UDEV_RULES=ON
   make
   sudo make install
   sudo cp ../rtl-sdr.rules /etc/udev/rules.d/
   sudo ldconfig

V√©rification B :

.. code-block:: shell

   which rtl_test
   ldd "$(which rtl_test)" | grep rtlsdr   # Doit pointer vers /usr/local/lib/librtlsdr.so

**3. D√©sactiver le module noyau DVB et red√©marrer**

.. code-block:: shell

   echo 'blacklist dvb_usb_rtl28xxu' | sudo tee /etc/modprobe.d/blacklist-dvb_usb_rtl28xxu.conf
   sudo reboot

Note :  
    Les commandes de rechargement imm√©diat (``udevadm control --reload-rules`` et ``udevadm trigger``)  
    sont optionnelles si vous pr√©voyez de red√©marrer imm√©diatement.

**4. V√©rifier le pilote apr√®s red√©marrage**

.. code-block:: shell

   rtl_test -t

Attendu :  
    La sortie doit inclure ``RTL-SDR Blog V4 Detected`` sans messages ``[R82XX] PLL not locked!``.  
    La ligne ``Using device 0: Generic RTL2832U OEM`` est normale ‚Äî il s‚Äôagit simplement du nom USB.

**6. Tester la r√©ception FM depuis la ligne de commande**

.. code-block:: shell

   rtl_fm -f 97.1M -M wbfm -s 180000 -r 48000 -g 28 | play -t raw -r 48k -e s -b 16 -c 1 -

Astuces :

    * ``-g`` : Essayez entre 25‚Äì35 dB ; plus n‚Äôest pas toujours mieux.  
    * R√©duisez ``-s`` √† ~170k‚Äì180k pour diminuer le bruit.  
    * Ajustez l√©g√®rement la fr√©quence (par ex. ``97.1005M``) pour un r√©glage fin.  
    * Fermez tout autre logiciel SDR susceptible de monopoliser l‚Äôappareil.

----

Installer les logiciels radio courants  
-------------------------------------------------

Cette section pr√©sente quatre applications SDR largement utilis√©es, avec de courtes descriptions, des instructions d‚Äôinstallation et des conseils de configuration de base pour les syst√®mes bas√©s sur Debian.

* :ref:`install_gqrx`
* :ref:`install_sdrpp`
* :ref:`install_rtl433`
* :ref:`install_dump1090`


----

.. _install_gqrx:

GQRX  
^^^^^^^^^^^^

GQRX est une application SDR simple et conviviale avec une interface graphique. Elle prend en charge une large gamme d‚Äôappareils SDR et est id√©ale pour √©couter la FM, l‚ÄôAM, la BLU (SSB) et d‚Äôautres signaux avec un affichage en temps r√©el du spectre et de la cascade.

Vous pouvez √©galement consulter le guide officiel d‚Äôinstallation pour Raspberry Pi ici : https://www.gqrx.dk/download/gqrx-sdr-for-the-raspberry-pi

**Option 1 ‚Äì Installation rapide (recommand√©e pour la plupart des utilisateurs)**

Rapide, simple, et int√©gr√©e aux mises √† jour syst√®me ‚Äî mais peut ne pas √™tre la derni√®re version.

.. code-block:: shell

   sudo apt update
   sudo apt install -y --no-install-recommends gqrx-sdr

**Option 2 ‚Äì Compilation depuis la source (optionnelle, derni√®res fonctionnalit√©s)**

Garantit la derni√®re version et une personnalisation compl√®te, mais prend plus de temps √† compiler et n√©cessite davantage de d√©pendances.

.. code-block:: shell

   sudo apt update

   sudo apt-get install -y --no-install-recommends \
     cmake gnuradio-dev gr-osmosdr qt6-base-dev qt6-svg-dev \
     libasound2-dev libjack-jackd2-dev portaudio19-dev libpulse-dev

   git clone https://github.com/gqrx-sdr/gqrx.git
   cd gqrx
   mkdir build && cd build
   cmake ..
   make
   sudo make install

**Pr√©venir l‚Äô√©crasement du pilote**

Lors de l‚Äôinstallation de GQRX, SDR++, gnuradio-dev ou gr-osmosdr, le syst√®me peut r√©installer une version obsol√®te de ``librtlsdr``.  
Apr√®s chaque installation, v√©rifiez :

.. code-block:: shell

    ldd "$(which rtl_test)" | grep rtlsdr

Si cela ne pointe plus vers ``/usr/local/lib/librtlsdr.so``, ex√©cutez :

.. code-block:: shell

    sudo apt purge -y 'librtlsdr*'
    sudo ldconfig
    cd ~/rtl-sdr-blog/build && sudo make install && sudo ldconfig


Vous pouvez tester imm√©diatement (ou apr√®s un red√©marrage pour un environnement propre) :

.. code-block:: shell

   rtl_test -t

Sortie attendue :

   * Contient RTL-SDR Blog V4 Detected.  
   * Aucun message [R82XX] PLL not locked!.

**Configuration au premier lancement**

* **P√©riph√©riques d‚ÄôE/S** :

  * Appareil : ``RTL-SDR (V4)``.  
  * D√©bit d‚Äôentr√©e : ``1.8 MSPS`` (1800000).

* **Contr√¥les d‚Äôentr√©e** :

  * **Gain LNA** : Commencez autour de 25‚Äì35 dB, ajustez selon besoin.

* **Options du r√©cepteur** :

  * D√©finir la correction de fr√©quence (PPM) issue de votre calibration.  
  * Mode : ``WFM (mono ou st√©r√©o)`` pour la FM diffus√©e.

----

.. _install_sdrpp:

SDR++ (SDRpp)  
^^^^^^^^^^^^^

SDR++ est un logiciel SDR moderne, rapide et multiplateforme qui prend en charge une vari√©t√© d‚Äôappareils, y compris le RTL-SDR Blog V4. Il offre une interface claire et conviviale, une large prise en charge des modulations, un filtrage DSP avanc√© et des capacit√©s d‚Äôenregistrement.

Vous pouvez consulter le manuel officiel ici : https://www.sdrpp.org/manual.pdf

**Installer depuis la source**

.. code-block:: shell

   sudo apt update
   sudo apt install -y --no-install-recommends build-essential cmake git pkg-config \
     libfftw3-dev libvolk2-dev libglfw3-dev libglew-dev \
     libzstd-dev librtaudio-dev

   git clone https://github.com/AlexandreRouma/SDRPlusPlus
   cd SDRPlusPlus
   mkdir build && cd build
   cmake .. -DOPT_BUILD_RTL_SDR_SOURCE=ON
   make
   sudo make install

**Pr√©venir l‚Äô√©crasement du pilote**

Lors de l‚Äôinstallation de GQRX, SDR++, gnuradio-dev ou gr-osmosdr, le syst√®me peut r√©installer une version obsol√®te de ``librtlsdr``.  
Apr√®s chaque installation, v√©rifiez :

.. code-block:: shell

    ldd "$(which rtl_test)" | grep rtlsdr

Si cela ne pointe plus vers ``/usr/local/lib/librtlsdr.so``, ex√©cutez :

.. code-block:: shell

    sudo apt purge -y 'librtlsdr*'
    sudo ldconfig
    cd ~/rtl-sdr-blog/build && sudo make install && sudo ldconfig


Vous pouvez tester imm√©diatement (ou apr√®s un red√©marrage pour un environnement propre) :

.. code-block:: shell

   rtl_test -t

Sortie attendue :

   * Contient RTL-SDR Blog V4 Detected.  
   * Aucun message [R82XX] PLL not locked!.

**Notes au premier lancement :**

Apr√®s l‚Äôinstallation, SDR++ appara√Ætra dans le menu de votre bureau (g√©n√©ralement sous "Autre"), ou vous pouvez ex√©cuter :

   .. code-block:: shell

      sdrpp

* **Appareil :** S√©lectionnez **RTL-SDR (V4)** dans le menu **Source**.  
* **D√©bit d‚Äô√©chantillonnage :** 1.8 MSPS est typique ; r√©duisez si la charge CPU est √©lev√©e.  
* **Gain :** D√©sactivez l‚ÄôAGC et d√©finissez le gain manuel (commencez ~35 dB).  
* **Correction PPM :** Entrez la valeur de calibration issue de ``rtl_test -p``.  
* **Mode de d√©modulation :** Choisissez WFM pour la FM, SSB pour les bandes radioamateurs, etc.

----

.. _install_rtl433:

rtl_433  
^^^^^^^^^^^^

rtl_433 est un outil en ligne de commande pour d√©coder les transmissions radio de dispositifs fonctionnant dans la bande ISM 433 MHz, tels que les stations m√©t√©o, les capteurs de pression des pneus et les thermom√®tres sans fil.

**Installation :**

.. code-block:: shell

   sudo apt install -y rtl-433

**Pr√©venir l‚Äô√©crasement du pilote**

Lors de l‚Äôinstallation de GQRX, SDR++, gnuradio-dev ou gr-osmosdr, le syst√®me peut r√©installer une version obsol√®te de ``librtlsdr``.  
Apr√®s chaque installation, v√©rifiez :

.. code-block:: shell

    ldd "$(which rtl_test)" | grep rtlsdr

Si cela ne pointe plus vers ``/usr/local/lib/librtlsdr.so``, ex√©cutez :

.. code-block:: shell

    sudo apt purge -y 'librtlsdr*'
    sudo ldconfig
    cd ~/rtl-sdr-blog/build && sudo make install && sudo ldconfig


Vous pouvez tester imm√©diatement (ou apr√®s un red√©marrage pour un environnement propre) :

.. code-block:: shell

   rtl_test -t

Sortie attendue :

   * Contient RTL-SDR Blog V4 Detected.  
   * Aucun message [R82XX] PLL not locked!.

**Utilisation de base :**

* Ex√©cutez ``rtl_433`` pour d√©tecter et d√©coder automatiquement les dispositifs courants en 433 MHz.  
* Utilisez ``rtl_433 -G`` pour lister tous les protocoles pris en charge.

----

.. _install_dump1090:

dump1090-mutability  
^^^^^^^^^^^^^^^^^^^^^^^^^^^

dump1090-mutability est un d√©codeur Mode S pour les donn√©es transpondeur ADS-B des avions. Il re√ßoit et d√©code les positions, vitesses et autres donn√©es de vol des avions, et peut fournir une carte en direct via un navigateur web.

**Installation :**

.. code-block:: shell

   sudo apt install -y dump1090-mutability

**Pr√©venir l‚Äô√©crasement du pilote**

Lors de l‚Äôinstallation de GQRX, SDR++, gnuradio-dev ou gr-osmosdr, le syst√®me peut r√©installer une version obsol√®te de ``librtlsdr``.  
Apr√®s chaque installation, v√©rifiez :

.. code-block:: shell

    ldd "$(which rtl_test)" | grep rtlsdr

Si cela ne pointe plus vers ``/usr/local/lib/librtlsdr.so``, ex√©cutez :

.. code-block:: shell

    sudo apt purge -y 'librtlsdr*'
    sudo ldconfig
    cd ~/rtl-sdr-blog/build && sudo make install && sudo ldconfig


Vous pouvez tester imm√©diatement (ou apr√®s un red√©marrage pour un environnement propre) :

.. code-block:: shell

   rtl_test -t

Sortie attendue :

   * Contient RTL-SDR Blog V4 Detected.  
   * Aucun message [R82XX] PLL not locked!.

**Utilisation de base :**

* Ex√©cutez : ``dump1090 --interactive --net``.  
* Ouvrez ``http://<raspberrypi-ip>:8080`` dans votre navigateur pour visualiser le suivi en direct des avions.



