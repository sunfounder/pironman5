.. note:: 

    Hallo, willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Community auf Facebook! Tauche tiefer in die Welt von Raspberry Pi, Arduino und ESP32 ein und tausche dich mit anderen Enthusiasten aus.

    **Warum beitreten?**

    - **Expertensupport**: L√∂se nach dem Kauf auftretende Probleme und technische Herausforderungen mit Hilfe unserer Community und unseres Teams.
    - **Lernen & Teilen**: Tausche Tipps und Tutorials aus, um deine F√§higkeiten zu verbessern.
    - **Exklusive Einblicke**: Erhalte fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Vorschauen.
    - **Sonderrabatte**: Profitiere von exklusiven Rabatten auf unsere neuesten Produkte.
    - **Festliche Aktionen und Verlosungen**: Nimm an Verlosungen und saisonalen Sonderaktionen teil.

    üëâ Bereit, mit uns zu entdecken und zu kreieren? Klicke auf [|link_sf_facebook|] und werde noch heute Mitglied!

IO-Erweiterung
================

RGB-LEDs
------------

.. image:: img/io_board_rgb.png

Das Board verf√ºgt √ºber 4 WS2812 RGB-LEDs, die eine anpassbare Steuerung bieten. Benutzer k√∂nnen sie ein- oder ausschalten, die Farbe √§ndern, die Helligkeit anpassen, Anzeige-Modi wechseln und die Geschwindigkeit der √Ñnderungen einstellen.

* Um den Ein- und Aus-Zustand der RGB-LEDs zu √§ndern, verwende ``true``, um die RGB-LEDs einzuschalten, und ``false``, um sie auszuschalten.

.. code-block:: shell

  sudo pironman5 -re true

* Um ihre Farbe zu √§ndern, gib die gew√ºnschten hexadezimalen Farbwerte ein, wie zum Beispiel ``fe1a1a``.

.. code-block:: shell

  sudo pironman5 -rc fe1a1a

* Um die Helligkeit der RGB-LED zu √§ndern (Bereich: 0 ~ 100%):

.. code-block:: shell

  sudo pironman5 -rb 100

* Um die Anzeige-Modi der RGB-LED zu wechseln, w√§hle aus den folgenden Optionen: ``solid/breathing/flow/flow_reverse/rainbow/rainbow_reverse/hue_cycle``:

.. note::

  Wenn du den RGB-LED-Anzeigemodus auf ``rainbow``, ``rainbow_reverse`` oder ``hue_cycle`` einstellst, kannst du die Farbe nicht mit ``pironman5 -rc`` festlegen.

.. code-block:: shell

  sudo pironman5 -rs breathing

* Um die Geschwindigkeit der √Ñnderung zu √§ndern (Bereich: 0 ~ 100%):

.. code-block:: shell

  sudo pironman5 -rp 80

RGB-Steuerpin
-------------------------

Die RGB-LED wird √ºber SPI gesteuert und ist mit **GPIO10** verbunden, das auch der SPI MOSI-Pin ist. Die beiden gezeigten Pins werden verwendet, um die RGB-LED mit GPIO10 zu verbinden. Wenn dies nicht ben√∂tigt wird, kann der Jumper entfernt werden.

  .. image:: img/io_board_rgb_pin.png

RGB-OUT-Pins
-------------------------

.. image:: img/io_board_rgb_out.png

Die WS2812 RGB-LEDs unterst√ºtzen serielle Verbindungen, sodass ein externer RGB-LED-Streifen angeschlossen werden kann. Verbinde den **SIG**-Pin mit dem **DIN**-Pin des externen Streifens zur Erweiterung.

Die Standardkonfiguration umfasst 4 RGB-LEDs. Schlie√üe zus√§tzliche LEDs an und aktualisiere die Anzahl mit:

.. code-block:: shell

  sudo pironman5 --rgb-led-count [quantity]

Beispiel:

.. code-block:: shell

  sudo pironman5 --rgb-led-count 12



OLED-Bildschirmanschluss
----------------------------

Der OLED-Bildschirmanschluss mit der Adresse 0x3C ist ein wichtiges Merkmal.

.. image:: img/io_board_oled.png

Wenn der OLED-Bildschirm nicht angezeigt wird oder fehlerhaft ist, kannst du folgende Schritte zur Fehlerbehebung durchf√ºhren:

√úberpr√ºfe, ob das FPC-Kabel des OLED-Bildschirms korrekt angeschlossen ist.

#. Verwende den folgenden Befehl, um die Programmlogs anzuzeigen und nach Fehlermeldungen zu suchen.

    .. code-block:: shell

        cat /var/log/pironman5/pm_auto.oled.log

#. Alternativ kannst du den folgenden Befehl verwenden, um zu √ºberpr√ºfen, ob die i2c-Adresse 0x3C des OLED erkannt wird:
    
    .. code-block:: shell
        
        sudo i2cdetect -y 1

#. Wenn die ersten beiden Schritte keine Probleme anzeigen, versuche, den pironman5-Dienst neu zu starten, um zu sehen, ob das Problem dadurch behoben wird.


    .. code-block:: shell

        sudo systemctl restart pironman5.service

Wake-Up-Ausl√∂ser
-------------------------

.. image:: img/io_board_vib.png

Der integrierte Vibrationsschalter wird verwendet, um das OLED-Display aus dem Energiesparmodus aufzuwecken. Wenn eine Vibration erkannt wird, sendet er ein Signal zur Reaktivierung des OLED-Bildschirms, sodass das Display im Ruhezustand ausgeschaltet bleiben und bei Bewegung automatisch eingeschaltet werden kann.

Wenn Sie die f√ºr den Vibrationsschalter vorgesehene Jumperkappe entfernen, wird die Aufweckfunktion deaktiviert. Sobald das OLED in den Ruhezustand √ºbergeht, kann es nicht mehr aufgeweckt werden. Diese Option richtet sich an fortgeschrittene Benutzer, die den entsprechenden GPIO-Pin f√ºr andere Anwendungen verwenden m√∂chten.

.. note::

  Jumper installiert: Vibrationserkennung zum Aufwecken ist aktiviert.

  Jumper entfernt: OLED kann nach dem Ausschalten nicht mehr aufgeweckt werden. Der Pin steht f√ºr andere Zwecke zur Verf√ºgung.

Infrarot-Empf√§nger
---------------------------

.. image:: img/io_board_receiver.png

* **Modell**: IRM-56384, arbeitet bei 38KHz.
* **Verbindung**: Der IR-Empf√§nger ist mit **GPIO13** verbunden.
* **D1**: Ein Infrarot-Empfangsanzeiger, der beim Empfang eines Signals blinkt.
* **J8**: Ein Pin zur Aktivierung der Infrarot-Funktion. Standardm√§√üig ist ein Jumper-Deckel eingesetzt, um sofortige Funktionalit√§t zu gew√§hrleisten. Entferne den Deckel, um GPIO13 freizugeben, wenn der IR-Empf√§nger nicht verwendet wird.

Um den IR-Empf√§nger zu nutzen, √ºberpr√ºfe seine Verbindung und installiere das notwendige Modul:

* Teste die Verbindung:

  .. code-block:: shell

    sudo ls /dev |grep lirc

* Installiere das ``lirc``-Modul:

  .. code-block:: shell

    sudo apt-get install lirc -y

* Teste jetzt den IR-Empf√§nger, indem du den folgenden Befehl ausf√ºhrst.

  .. code-block:: shell

    mode2 -d /dev/lirc0

* Nachdem du den Befehl ausgef√ºhrt hast, dr√ºcke eine Taste auf der Fernbedienung, und der Code dieser Taste wird angezeigt.


RGB-L√ºfter-Pins
---------------

Das IO-Erweiterungsboard unterst√ºtzt bis zu zwei 5V-Nicht-PWM-L√ºfter. Beide L√ºfter werden gemeinsam gesteuert.

**FAN1** und **FAN 2** sind zwei S√§tze von L√ºfter-Pins. Du musst das rote Kabel des L√ºfters an ‚Äû+‚Äú und das schwarze Kabel an ‚Äû-‚Äú anschlie√üen.

.. image:: img/io_board_fan.png

Es gibt zwei S√§tze von 2-Pin-Anschl√ºssen und zwei Jumper, die zur Steuerung der RGB-L√ºfter und ihrer LEDs verwendet werden. 
Standardm√§√üig sind die Jumper mit diesen Pins verbunden, was die Steuerung der L√ºfter und LEDs √ºber GPIO6 und GPIO5 erm√∂glicht. 
Wenn der L√ºfterbetrieb nicht erforderlich ist, k√∂nnen diese Jumper entfernt werden, um GPIO5 und GPIO6 freizugeben.

.. image:: img/io_board_fan_j9.png


Nachdem die Jumper-Deckel entfernt wurden, ist der L√ºfter oder die L√ºfter-LED standardm√§√üig ausgeschaltet. 
Wenn eine Aktivierung erforderlich ist, k√∂nnen die beiden Pads unten mit L√∂tzinn √ºberbr√ºckt werden. 
Sobald sie verbunden sind, wird der L√ºfter/LED beim Einschalten des Systems eingeschaltet und beim Herunterfahren des Systems ausgeschaltet, 
kann jedoch nicht √ºber den IO-Port gesteuert werden.

.. image:: img/io_board_fan_hanpan.png

.. **D2** ist ein L√ºfter-Signalindikator, der leuchtet, wenn der L√ºfter aktiv ist.

.. .. image:: img/io_board_fan_d2.png

.. Du kannst den Befehl verwenden, um den Betriebsmodus der beiden RGB-L√ºfter zu konfigurieren. Diese Modi bestimmen die Bedingungen, unter denen die RGB-L√ºfter aktiviert werden.

Zum Beispiel, wenn auf **1: Performance**-Modus eingestellt, werden die RGB-L√ºfter bei 50¬∞C aktiviert.

.. code-block:: shell

  sudo pironman5 -gm 3

* **4: Quiet**: Die RGB-L√ºfter werden bei 70¬∞C aktiviert.
* **3: Balanced**: Die RGB-L√ºfter werden bei 67,5¬∞C aktiviert.
* **2: Cool**: Die RGB-L√ºfter werden bei 60¬∞C aktiviert.
* **1: Performance**: Die RGB-L√ºfter werden bei 50¬∞C aktiviert.
* **0: Always On**: Die RGB-L√ºfter sind immer an.

Wenn du den Steuerpin des RGB-L√ºfters an verschiedene Pins des Raspberry Pi anschlie√üt, kannst du den folgenden Befehl verwenden, um die Pin-Nummer zu √§ndern.

.. code-block:: shell

  sudo pironman5 -gp 18

Pin-Header
----------------

.. image:: img/io_board_pin_header.png

Zwei rechteckige Header-Steckverbinder erweitern den GPIO des Raspberry Pi, beachte jedoch, dass der IR-Empf√§nger, die RGB-LED und der L√ºfter einige Pins belegen. Entferne die entsprechenden Jumper-Deckel, um diese Pins f√ºr andere Funktionen zu nutzen.

.. list-table:: 
  :widths: 25 25
  :header-rows: 1

  * - Pironman 5
    - Raspberry Pi 5
  * - IR-Empf√§nger (Optional)
    - GPIO13
  * - OLED SDA
    - SDA
  * - OLED SCL
    - SCL
  * - FAN (Optional)
    - GPIO6
  * - FLED (Optional)
    - GPIO5  
  * - RGB (Optional)
    - GPIO10
