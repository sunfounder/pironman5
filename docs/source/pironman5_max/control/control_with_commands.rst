.. note::

    Bonjour et bienvenue dans la communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez au c≈ìur de l‚Äôunivers Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez vos probl√®mes apr√®s-vente et d√©fis techniques gr√¢ce √† l‚Äôaide de notre √©quipe et de la communaut√©.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour perfectionner vos comp√©tences.
    - **Avant-premi√®res exclusives** : Soyez parmi les premiers inform√©s des nouveaux produits et aper√ßus.
    - **R√©ductions sp√©ciales** : B√©n√©ficiez d‚Äôoffres exclusives sur nos derni√®res nouveaut√©s.
    - **Promotions festives et cadeaux** : Participez √† des jeux-concours et √©v√©nements promotionnels pendant les f√™tes.

    üëâ Pr√™t(e) √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd‚Äôhui !

.. _max_view_control_commands:

Contr√¥le via Commandes
========================================
En plus d‚Äôafficher les donn√©es du Pironman 5 et de contr√¥ler divers appareils via le tableau de bord, vous pouvez √©galement utiliser des commandes pour les piloter.

.. note::

  * Pour le syst√®me **Home Assistant**, vous ne pouvez surveiller et contr√¥ler le Pironman 5 qu‚Äô√† travers le tableau de bord, accessible √† l‚Äôadresse ``http://<ip>:34001``.
  * Pour le syst√®me **Batocera.linux**, le contr√¥le du Pironman 5 s‚Äôeffectue uniquement via des commandes. Notez que toute modification de la configuration n√©cessite un red√©marrage du service via la commande ``pironman5 restart`` pour √™tre prise en compte.

Afficher les configurations de base
---------------------------------------

Le module ``pironman5`` propose des configurations de base pour le Pironman, que vous pouvez consulter √† l‚Äôaide de la commande suivante :

.. code-block:: shell

  pironman5 -c

Les configurations par d√©faut s‚Äôaffichent ainsi :

.. code-block::

  {
      "auto": {
          "rgb_color": "#0a1aff",
          "rgb_brightness": 50,
          "rgb_style": "breathing",
          "rgb_speed": 50,
          "rgb_enable": true,
          "rgb_led_count": 4,
          "temperature_unit": "C",
          "gpio_fan_mode": 2,
          "gpio_fan_pin": 6
      }
  }

Personnalisez ces param√®tres selon vos besoins.

Utilisez ``pironman5`` ou ``pironman5 -h`` pour obtenir de l‚Äôaide.

.. code-block::

  usage: pironman5-service [-h] [-c] [-rc RGB_COLOR] [-rb RGB_BRIGHTNESS] [-rs {solid,breathing,flow,flow_reverse,rainbow,rainbow_reverse,hue_cycle}] [-rp RGB_SPEED] [-re RGB_ENABLE]
                          [-rl RGB_LED_COUNT] [-u {C,F}] [-gm GPIO_FAN_MODE] [-gp GPIO_FAN_PIN]
                          [{start,stop}]

  Pironman5

  positional arguments:
    {start,stop}          Command

  options:
    -h, --help            show this help message and exit
    -c, --config          Show config
    -rc RGB_COLOR, --rgb-color RGB_COLOR
                          RGB color
    -rb RGB_BRIGHTNESS, --rgb-brightness RGB_BRIGHTNESS
                          RGB brightness
    -rs {solid,breathing,flow,flow_reverse,rainbow,rainbow_reverse,hue_cycle}, --rgb-style {solid,breathing,flow,flow_reverse,rainbow,rainbow_reverse,hue_cycle}
                          RGB style
    -rp RGB_SPEED, --rgb-speed RGB_SPEED
                          RGB speed
    -re RGB_ENABLE, --rgb-enable RGB_ENABLE
                          RGB enable
    -rl RGB_LED_COUNT, --rgb-led-count RGB_LED_COUNT
                          RGB LED count
    -u {C,F}, --temperature-unit {C,F}
                          Temperature unit
    -gm GPIO_FAN_MODE, --gpio-fan-mode GPIO_FAN_MODE
                          GPIO fan mode, 0-4, ['Always On', 'Performance', 'Cool', 'Balanced', 'Quiet']
    -gp GPIO_FAN_PIN, --gpio-fan-pin GPIO_FAN_PIN
                          GPIO fan pin



.. note::

  √Ä chaque modification de l‚Äô√©tat du service ``pironman5.service``, vous devez ex√©cuter la commande suivante pour appliquer les changements :

  .. code-block:: shell

    sudo systemctl restart pironman5.service


* V√©rifiez l‚Äô√©tat du programme ``pironman5`` √† l‚Äôaide de l‚Äôoutil ``systemctl`` :

  .. code-block:: shell

    sudo systemctl status pironman5.service

* Vous pouvez √©galement consulter les fichiers journaux g√©n√©r√©s par le programme :

  .. code-block:: shell

    ls /var/log/pironman5/


Contr√¥le des LEDs RGB
----------------------
La carte dispose de 4 LEDs RGB WS2812 enti√®rement personnalisables. Vous pouvez les allumer ou les √©teindre, changer leur couleur, ajuster leur luminosit√©, modifier le mode d'affichage, et r√©gler la vitesse des effets.

.. note::

  Chaque modification de l‚Äô√©tat de ``pironman5.service`` n√©cessite l'ex√©cution de la commande suivante pour appliquer les changements :

  .. code-block:: shell

    sudo systemctl restart pironman5.service

* Pour allumer ou √©teindre les LEDs RGB, utilisez ``true`` pour allumer et ``false`` pour √©teindre :

.. code-block:: shell

  pironman5 -re true

* Pour changer leur couleur, indiquez une valeur hexad√©cimale, par exemple ``fe1a1a`` :

.. code-block:: shell

  pironman5 -rc fe1a1a

* Pour ajuster la luminosit√© (plage : 0 ~ 100%) :

.. code-block:: shell

  pironman5 -rb 100

* Pour modifier le mode d‚Äôaffichage RGB, choisissez parmi : ``solid/breathing/flow/flow_reverse/rainbow/rainbow_reverse/hue_cycle`` :

.. note::

  Si vous s√©lectionnez ``rainbow``, ``rainbow_reverse`` ou ``hue_cycle``, vous ne pourrez pas d√©finir la couleur via ``pironman5 -rc``.

.. code-block:: shell

  pironman5 -rs breathing

* Pour ajuster la vitesse des effets (plage : 0 ~ 100%) :

.. code-block:: shell

  pironman5 -rp 80

* Par d√©faut, 4 LEDs RGB sont utilis√©es. Pour en connecter davantage, indiquez le nombre :

.. code-block:: shell

  pironman5 -rl 12

.. _max_cc_control_fan:

Contr√¥le des ventilateurs RGB
---------------------------------
La carte d‚Äôextension IO prend en charge jusqu‚Äô√† deux ventilateurs 5V non-PWM, contr√¥l√©s simultan√©ment.

.. note::

  Chaque modification de l‚Äô√©tat de ``pironman5.service`` n√©cessite l'ex√©cution de la commande suivante pour appliquer les changements :

  .. code-block:: shell

    sudo systemctl restart pironman5.service

* Utilisez la commande suivante pour configurer le mode de fonctionnement des ventilateurs RGB, selon la temp√©rature de d√©clenchement souhait√©e.

Par exemple, le mode **1 : Performance** active les ventilateurs √† partir de 50¬∞C.


.. code-block:: shell

  sudo pironman5 -gm 3

* **4: Quiet** : activation √† 70¬∞C  
* **3: Balanced** : activation √† 67,5¬∞C  
* **2: Cool** : activation √† 60¬∞C  
* **1: Performance** : activation √† 50¬∞C  
* **0: Always On** : les ventilateurs restent toujours allum√©s  

* Si la broche de contr√¥le des ventilateurs est connect√©e √† une autre broche du Raspberry Pi, vous pouvez la modifier ainsi :

.. code-block:: shell

  sudo pironman5 -gp 18


V√©rification de l‚Äô√©cran OLED
-----------------------------------

Une fois la biblioth√®que ``pironman5`` install√©e, l‚Äô√©cran OLED affiche les informations CPU, RAM, utilisation du disque, temp√©rature CPU et l‚Äôadresse IP du Raspberry Pi √† chaque red√©marrage.

Si l‚Äô√©cran OLED ne montre rien, v√©rifiez d‚Äôabord la connexion du c√¢ble FPC.

Vous pouvez ensuite consulter le journal du programme pour diagnostiquer le probl√®me :

.. code-block:: shell

  cat /var/log/pironman5/pm_auto.oled.log

Ou v√©rifiez si l‚Äôadresse i2c 0x3C de l‚Äô√©cran OLED est d√©tect√©e :

.. code-block:: shell

  i2cdetect -y 1

V√©rification du r√©cepteur infrarouge
---------------------------------------



* Installez le module ``lirc`` :

  .. code-block:: shell

    sudo apt-get install lirc -y

* Testez maintenant le r√©cepteur IR en ex√©cutant la commande suivante :

  .. code-block:: shell

    mode2 -d /dev/lirc0

* Une fois la commande lanc√©e, appuyez sur un bouton de la t√©l√©commande, et son code s'affichera √† l'√©cran.

